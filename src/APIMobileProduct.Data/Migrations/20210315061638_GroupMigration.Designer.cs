// <auto-generated />
using System;
using APIMobileProduct.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

namespace Data.Migrations
{
    [DbContext(typeof(OraContext))]
    [Migration("20210315061638_GroupMigration")]
    partial class GroupMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("APIMobileProduct.Domain.Entities.CompanyEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<byte[]>("File")
                        .IsRequired()
                        .HasColumnType("RAW(2000)");

                    b.Property<string>("Filename")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.HasKey("Id");

                    b.ToTable("EMPRESA");
                });

            modelBuilder.Entity("APIMobileProduct.Domain.Entities.FunctionEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.HasKey("Id");

                    b.ToTable("FUNCAO");
                });

            modelBuilder.Entity("APIMobileProduct.Domain.Entities.GroupEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("RAW(16)");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)");

                    b.Property<Guid>("ProfileId")
                        .HasColumnType("RAW(16)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.HasKey("Id");

                    b.ToTable("GRUPO");
                });

            modelBuilder.Entity("APIMobileProduct.Domain.Entities.PermitEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<bool>("Cadastrar")
                        .HasColumnType("NUMBER(1)");

                    b.Property<bool>("Consultar")
                        .HasColumnType("NUMBER(1)");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<bool>("Deletar")
                        .HasColumnType("NUMBER(1)");

                    b.Property<bool>("Editar")
                        .HasColumnType("NUMBER(1)");

                    b.Property<Guid>("FunctionId")
                        .HasColumnType("RAW(16)");

                    b.Property<Guid>("ProfileId")
                        .HasColumnType("RAW(16)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.HasKey("Id");

                    b.HasIndex("FunctionId");

                    b.HasIndex("ProfileId");

                    b.ToTable("PERMISSAO");
                });

            modelBuilder.Entity("APIMobileProduct.Domain.Entities.ProfileEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("RAW(16)");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("PERFIL");
                });

            modelBuilder.Entity("APIMobileProduct.Domain.Entities.PermitEntity", b =>
                {
                    b.HasOne("APIMobileProduct.Domain.Entities.FunctionEntity", "Function")
                        .WithMany()
                        .HasForeignKey("FunctionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APIMobileProduct.Domain.Entities.ProfileEntity", "Profile")
                        .WithMany("Permits")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Function");

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("APIMobileProduct.Domain.Entities.ProfileEntity", b =>
                {
                    b.HasOne("APIMobileProduct.Domain.Entities.CompanyEntity", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("APIMobileProduct.Domain.Entities.ProfileEntity", b =>
                {
                    b.Navigation("Permits");
                });
#pragma warning restore 612, 618
        }
    }
}
